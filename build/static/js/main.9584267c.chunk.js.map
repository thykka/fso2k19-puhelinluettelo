{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["API_URL","services_persons","axios","get","then","response","data","newObject","post","id","delete","concat","put","Notification","_ref","notification","hasOwnProperty","type","error","message","toString","react_default","a","createElement","className","NotificationDuration","confirm","NewContact","addPerson","_useState7","useState","_useState8","Object","slicedToArray","newName","setNewName","_useState9","_useState10","newNumber","setNewNumber","onSubmit","event","preventDefault","value","onChange","currentTarget","Filter","_ref2","filter","setFilter","ContactList","_ref3","persons","removePerson","map","person","App_ContactItem","key","ContactItem","_ref4","data-id","onClick","name","number","App","_useState","_useState2","setPersons","_useState3","_useState4","setNotification","clearNotification","useEffect","Persons","_useState5","_useState6","filteredContacts","toLowerCase","indexOf","notify","setTimeout","errorHandler","reason","JSON","stringify","components_Notification","App_NewContact","existingPerson","find","window","editedPerson","catch","newPerson","toConsumableArray","App_Filter","App_ContactList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9584267c.chunk.js","sourcesContent":["import axios from 'axios'\nconst API_URL = '/api/persons'\n\nconst getList = () => {\n  const request = axios.get(API_URL);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(API_URL, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${API_URL}/${id}`);\n  return request.then(response => response.data);\n};\n\nconst edit = (id, data) => {\n  const request = axios.put(`${API_URL}/${id}`, data);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getList, create, remove, edit\n};\n","import React from 'react';\n\nconst Notification = ({ notification }) => {\n  if(\n    !notification ||\n    !notification.hasOwnProperty('message')\n  ) return null;\n\n  const type = notification.type || 'error';\n\n  if(notification.error) {\n    notification.message += '; ' + (notification.error).toString();\n  }\n\n  return (\n    <div className={ `notification notification--${ type }` }>\n      { notification.message }\n    </div>\n  )\n}\n\nexport default Notification;\n\nexport const NotificationDuration = {\n  'error': 10000,\n  'confirm': 5000\n};\n","import React, { useState, useEffect } from 'react';\nimport Persons from './services/persons';\nimport Notification, { NotificationDuration } from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ notification, setNotification ] = useState();\n  const clearNotification = () => setNotification(null);\n\n  useEffect(() => {\n    Persons.getList().then(data => setPersons(data));\n  }, []);\n\n  const [ filter, setFilter ] = useState('');\n  const filteredContacts = persons.filter(\n    person =>\n      person.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0 ||\n      person.number.indexOf(filter) >= 0\n  );\n\n  const notify = (notification) => {\n    setNotification(notification);\n    setTimeout(clearNotification, NotificationDuration[notification.type]);\n  }\n\n  const errorHandler = (message) => {\n    return (reason) => {\n      const error = (\n        typeof reason.response !== 'undefined' &&\n        typeof reason.response.data !== 'undefined' &&\n        typeof reason.response.data.error === 'string'\n      ) ? reason.response.data.error : JSON.stringify(reason);\n      notify({ message, type: 'error', error });\n    };\n  }\n\n  const addPerson = (name, number) => {\n    const existingPerson = persons.find(person=>\n      person.name === name || person.number === number\n    );\n    if(existingPerson && window.confirm(`${ name } on jo luettelossa, korvataanko tiedot?`)) {\n      Persons.edit(existingPerson.id, { name, number })\n        .then(editedPerson => {\n          setPersons(persons.map(person => person.id === existingPerson.id ? editedPerson : person ));\n          notify({ message: 'Yhteystieto päivitetty: ' + editedPerson.name, type: 'confirm' });\n        })\n        .catch(errorHandler('Henkilön päivitys epäonnistui'));\n    } else {\n      Persons.create({ name, number })\n        .then(newPerson => {\n          setPersons([...persons, newPerson]);\n          notify({ message: 'Henkilö lisätty: ' + newPerson.name, type: 'confirm' });\n        })\n        .catch(errorHandler('Henkilön lisäys epäonnistui'));\n    }\n  };\n\n  const removePerson = (id) => {\n    const removePerson = persons.find(person => person.id === id);\n\n    if(\n      removePerson &&\n      window.confirm('Poistetaan henkilö ' + removePerson.name + '?')\n    ) {\n      Persons.remove(id)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== id));\n          notify({ message: 'Henkilö poistettu: ' + removePerson.name, type: 'confirm' });\n        })\n        .catch(errorHandler('Henkilön poisto epäonnistui'));\n    }\n  }\n\n  return (\n    <section className='contacts'>\n      <h1>Puhelinluettelo</h1>\n      <Notification notification={notification} />\n      <NewContact addPerson={ addPerson } />\n      <h3>Numerot</h3>\n      <Filter filter={ filter } setFilter={ setFilter } />\n      <ContactList persons={ filteredContacts } removePerson={ removePerson } />\n    </section>\n  );\n};\n\nconst NewContact = ({ addPerson }) => {\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const handleNameChange = (event) => {\n    setNewName(event.currentTarget.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.currentTarget.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addPerson(\n      newName,\n      newNumber\n    );\n    setNewName('');\n    setNewNumber('');\n  };\n\n  return (\n    <form className='contacts__new' onSubmit={handleSubmit}>\n      <h3>Lisää yhteystieto</h3>\n      <div className='form-control'>\n        Nimi:<br /><input value={newName}   onChange={handleNameChange} />\n      </div>\n      <div className='form-control'>\n        Numero:<br /><input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div className='form-control'>\n        <button type=\"submit\">Lisää</button>\n      </div>\n  </form>\n  )\n};\n\nconst Filter = ({ filter, setFilter }) => {\n  const handleChange = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  return <div>\n    Rajaa:<br /><input value={ filter } onChange={ handleChange } />\n  </div>;\n};\n\nconst ContactList = ({ persons, removePerson }) => <ul>\n  {\n    persons.map(person =>\n    <ContactItem\n      key={ person.id }\n      person={ person }\n      removePerson={ () => removePerson(person.id) }\n    />\n    )\n  }\n</ul>;\n\nconst ContactItem = ({ person, removePerson }) => <li data-id={ person.id }>\n  <button onClick={ removePerson }>X</button>\n  { person.name } — { person.number }\n</li>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}